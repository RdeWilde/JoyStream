/**
 * Copyright (C) JoyStream - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Bedeho Mender <bedeho.mender@gmail.com>, August 11 2015
 */

#include <common/Seed.hpp>
#include <CoinCore/hdkeys.h>
#include <CoinCore/bip39.h>

#include <openssl/rand.h>
#include <openssl/err.h>
#include <openssl/evp.h>
#include <openssl/sha.h>

namespace Coin {

const std::vector<Seed> Seed::testSeeds {
    Seed("72895423890547204535787782345236547876890977849583905859043850846758393475979394759060667579030304958585030303568679403039485931"),
    Seed("92345223452345234534523452346485969473657697006854736478679709685746457687995844058696505334358668865424893128409238490101248931"),
    Seed("12346635465609238490101248234523452435235412489312840923849065754893854947858490101248931284092384901012489312840923849010124891"),
    Seed("76574635634756554901012223452345423542542354293128409238490101248931284092384901012489312840923849010124893128409238490101248931"),
    Seed("74674523423452352452542345675478785749010124893128409238490101248931284092384901012489312840923849010124893128409238490101248931"),
    Seed("23453234524523453523452345235423489057890170947189574389679567547502345603895739013498573057934750345789147593475347500101248931"),
    Seed("09686789678969957475879128575678768567856783453475864796064754365625665867989467368296729725657865932465934287545826592482988931"),
    Seed("45674567464567466712895760947860178947298475785785678568689574850147856931079867043759047598470571384967316749837540750914774389"),
    Seed("87509832479037258947305748975034790573489573427509347057356785678567856705743895702347594375092347973905792348057038490101248931"),
    Seed("71908347812075891374071489327498271578394760375895785678574038975823475283490579023475934270573482957043285070349538490101248931"),
    Seed("87417059823478054395732047589342705743295702375980234709573498570234750923470958930475907340579437583204759837459073405739408931"),
    Seed("23859043255555555555955545234590237592375475023709475280934705943790933333333933793592754795230763789570425479038538490101248931"),
    Seed("13412424321492384901012489312840923849010124893128409238490101248931284092384901012489312840923849010124893128409238490101248931"),
    Seed("10932840123478927059739863042759834750923479573409573289476034789573405749837903752739045734907509347092754730957234950101248931"),
    Seed("35624362514364156246342165342164362146321463465213651263416536241436524361426534215634612436541263421653461524364125346101248931"),
    Seed("90657809568706587098678560678056807968507856907805687056875807896570586786507890586075806786709586078567095867085607865087065986"),
    Seed("20894875203478572346734275230475904750942379542378730524375273098570432759037502734895734029570234758073405732905709430101248931"),
    Seed("81203812903809218309192803809218098290382093810928390182390821093809218390128038291038120983091839081203812098381209981381248931"),
    Seed("54386587345843657834856843657463576345687346584367856437658436586348586436578436876836856348685683468376856384567346536867488931")
};

Seed::Seed() {
}

Seed::Seed(const char * hexEncoded)
    : Coin::UCharArray<WALLET_SEED_BYTE_LENGTH>(hexEncoded) {
}

Seed::Seed(const std::string & hexEncoded)
    : Coin::UCharArray<WALLET_SEED_BYTE_LENGTH>(hexEncoded) {
}

Seed::~Seed(){
    clear();
}

Seed Seed::generate() {

    // Seed to fill with entropy
    Seed s;

    if (!RAND_bytes(&s.at(0), WALLET_SEED_BYTE_LENGTH)) {
        throw std::runtime_error(ERR_error_string(ERR_get_error(), NULL));
    }

    return s;
}

uint Seed::length() noexcept {
    return WALLET_SEED_BYTE_LENGTH;
}


Coin::HDKeychain Seed::generateHDKeychain() {

    // Create keychain
    Coin::HDSeed hdSeed(this->toUCharVector());
    return Coin::HDKeychain(hdSeed.getMasterKey(), hdSeed.getMasterChainCode());
}

/**
void Seed::startAsyncGenerating() {

}

void Seed::stopAsyncGenerating() {

}
*/

}
